Project status, before I take a break:

1. The system metadata is public for all to see, and the mesage contents are encrypted.

2. The client is currently a command-line app, but there will be a GUI at a later stage.

3. The client currently has the 'update' command completed, which downloads new KK1s and responds with KK2s.

4. The next stage is to make the server.

5. The current programming language is Go. The main reaons for using it are that it has a Noise implementation that I have confidence in, has static typing, is modern and uncrufty, has an excellent standard library, good concurrency, and is a perfectly fine language.

6. The Finite-State-Machine model seems to be working well, although I don't like that it is wacky and surprising. With the server state machine, I was getting bogged down in how to deal with the layers of crypto, but I think the answer is that I just need an extra bit of state for recording when there are database lookups going on.

7. I have attempted a C version a few times, and I like how simple it is and how it is not annoying as a language. I think Go is better for this project though, because it saves me work in implementing things.
